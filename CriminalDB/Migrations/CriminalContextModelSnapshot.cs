// <auto-generated />
using CriminalDB.Core.DataModels;
using CriminalDB.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using System;

namespace CriminalDB.Migrations
{
    [DbContext(typeof(CriminalContext))]
    partial class CriminalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("CriminalDB.Core.DataModels.Crime", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("Time")
                        .HasColumnType("DateTime");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Crimes");
                });

            modelBuilder.Entity("CriminalDB.Core.DataModels.CrimeCriminal", b =>
                {
                    b.Property<int>("CrimeID");

                    b.Property<int>("CriminalID");

                    b.HasKey("CrimeID", "CriminalID");

                    b.HasIndex("CriminalID");

                    b.ToTable("CrimeCriminals");
                });

            modelBuilder.Entity("CriminalDB.Core.DataModels.CrimeVictim", b =>
                {
                    b.Property<int>("CrimeID");

                    b.Property<int>("VictimID");

                    b.HasKey("CrimeID", "VictimID");

                    b.HasIndex("VictimID");

                    b.ToTable("CrimeVictims");
                });

            modelBuilder.Entity("CriminalDB.Core.DataModels.Criminal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("Date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Gender");

                    b.Property<float>("Height")
                        .HasColumnType("Float");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<float>("Weight")
                        .HasColumnType("Float");

                    b.HasKey("ID");

                    b.ToTable("Criminals");
                });

            modelBuilder.Entity("CriminalDB.Core.DataModels.Victim", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("Date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Gender");

                    b.Property<float>("Height")
                        .HasColumnType("Float");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<float>("Weight")
                        .HasColumnType("Float");

                    b.HasKey("ID");

                    b.ToTable("Victims");
                });

            modelBuilder.Entity("CriminalDB.Core.DataModels.CrimeCriminal", b =>
                {
                    b.HasOne("CriminalDB.Core.DataModels.Crime", "Crime")
                        .WithMany("CrimeCriminals")
                        .HasForeignKey("CrimeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CriminalDB.Core.DataModels.Criminal", "Criminal")
                        .WithMany("Crimes")
                        .HasForeignKey("CriminalID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CriminalDB.Core.DataModels.CrimeVictim", b =>
                {
                    b.HasOne("CriminalDB.Core.DataModels.Crime", "Crime")
                        .WithMany("CrimeVictims")
                        .HasForeignKey("CrimeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CriminalDB.Core.DataModels.Victim", "Victim")
                        .WithMany("Crimes")
                        .HasForeignKey("VictimID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
